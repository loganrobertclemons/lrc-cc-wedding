# GitLab DB
locals {
  gitlab_db_name = format("%s-%s", var.gitlab_db_name, random_id.suffix.hex)
}

resource "random_id" "suffix" {
  byte_length = 2
}

resource "google_compute_global_address" "gitlab_sql" {
  provider      = google-beta
  project       = module.project_services.project_id
  name          = format("%s-gitlab-sql", var.cluster_name)
  purpose       = "VPC_PEERING"
  address_type  = "INTERNAL"
  network       = google_compute_network.gitlab_network.self_link
  address       = "10.1.0.0"
  prefix_length = 16
  depends_on    = [module.project_services]
}

resource "google_service_networking_connection" "private_vpc_connection" {
  provider                = google-beta
  network                 = google_compute_network.gitlab_network.self_link
  service                 = "servicenetworking.googleapis.com"
  reserved_peering_ranges = [google_compute_global_address.gitlab_sql.name]
  depends_on              = [module.project_services]
}

resource "google_sql_database_instance" "gitlab_db" {
  depends_on          = [google_service_networking_connection.private_vpc_connection, module.project_services]
  name                = local.gitlab_db_name
  region              = var.region
  project             = module.project_services.project_id
  database_version    = "POSTGRES_11"
  deletion_protection = "false"
  settings {
    tier            = "db-custom-4-15360"
    disk_autoresize = true

    ip_configuration {
      ipv4_enabled    = "false"
      private_network = google_compute_network.gitlab_network.self_link
    }
  }
}

resource "google_sql_database" "gitlabhq_production" {
  name       = "gitlabhq_production"
  instance   = google_sql_database_instance.gitlab_db.name
  depends_on = [google_sql_user.gitlab, module.project_services]
  project    = module.project_services.project_id
}

resource "random_string" "autogenerated_gitlab_db_password" {
  length  = 16
  special = false
}

resource "google_sql_user" "gitlab" {
  name       = "gitlab"
  instance   = google_sql_database_instance.gitlab_db.name
  depends_on = [module.project_services]
  password   = var.gitlab_db_password != "" ? var.gitlab_db_password : random_string.autogenerated_gitlab_db_password.result
}

// Redis
resource "google_redis_instance" "gitlab_redis" {
  name               = format("%s-gitlab-redis", var.cluster_name)
  tier               = "STANDARD_HA"
  memory_size_gb     = 5
  region             = var.region
  authorized_network = google_compute_network.gitlab_network.self_link
  depends_on = [module.project_services]
  display_name = "GitLab Redis"
}
